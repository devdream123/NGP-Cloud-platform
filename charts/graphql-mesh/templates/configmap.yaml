---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mesh.fullname" . }}-env-cm
data:
  TELEMETRY_HOST: {{ printf "%s.%s.svc.cluster.local" .Values.server.telemetryHostPrefix .Release.Namespace | quote }}
  TELEMETRY_PORT: {{ .Values.server.telemetryPort | quote }}
  NODE_OPTIONS: {{ .Values.server.nodeOptions | quote }}
  DEBUG: {{ .Values.server.debug | quote }}
  {{- if .Values.otel.enabled }}
  OTEL_SERVICE_NAME: {{ .Values.otel.serviceName | quote }}
  OTEL_RESOURCE_ATTRIBUTES: {{ .Values.otel.resourceAttributes | quote }}
  OTEL_TRACES_EXPORTER: {{ .Values.otel.tracesExporter | quote }}
  OTEL_PROPAGATORS: {{ .Values.otel.propagators | quote }}
  OTEL_LOG_LEVEL: {{ .Values.otel.logLevel | quote }}
  SPLUNK_METRICS_ENABLED: {{ .Values.splunk.metricsEnabled | default "false" | quote }}
  SPLUNK_PROFILER_ENABLED: {{ .Values.splunk.profilerEnabled | quote }}
  SPLUNK_PROFILER_MEMORY_ENABLED: {{ .Values.splunk.profilerMemoryEnabled | quote }}
  SPLUNK_PROFILER_LOGS_ENDPOINT: {{ .Values.splunk.profilerLogsEndpoint | quote }}
  {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mesh.fullname" . }}-meshrc-cm
data:
  .meshrc.yaml: |-
    serve:
        cors:
          origin: '{{ .Values.mesh.cors.origin }}'
        hostname: 0.0.0.0
        port: {{ .Values.service.port }}
        playground: {{ .Values.mesh.graphqliEnabled }}
        {{- if .Values.mesh.errorMaskingEnabled }}
        plugins:
          - maskedErrors:
              errorMessage: 'Something went wrong.'
        {{- end }}

    sources:
      - name: Deal Sheet
        handler:
          graphql:
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/graphql/" .Values.dealSheet.chartName .Values.backendNamespace .Values.dealSheet.port | quote }}
            timeout: 600000
            operationHeaders:
              x-cloud-trace-context: "{context.headers['x-cloud-trace-context']}"
              x-goog-iap-jwt-assertion: "{context.headers['x-goog-iap-jwt-assertion']}"
      - name: Calendar
        handler:
          graphql:
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/graphql/" .Values.calendar.chartName .Values.backendNamespace .Values.calendar.port | quote }}
            timeout: 600000
            operationHeaders:
              x-cloud-trace-context: "{context.headers['x-cloud-trace-context']}"
              x-goog-iap-jwt-assertion: "{context.headers['x-goog-iap-jwt-assertion']}"
      - name: EventSchedule
        handler:
          graphql:
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/graphql/" .Values.eventSchedule.chartName .Values.backendNamespace .Values.eventSchedule.port | quote }}
            timeout: 600000
            operationHeaders:
              x-cloud-trace-context: "{context.headers['x-cloud-trace-context']}"
              x-goog-iap-jwt-assertion: "{context.headers['x-goog-iap-jwt-assertion']}"
      - name: Hierarchy
        handler:
          openapi:
            source: ./typesense-openapi.yml
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/" .Values.hierarchy.chartName .Values.backendNamespace .Values.hierarchy.port | quote }}
            operationHeaders:
              x-cloud-trace-context: "{context.headers['x-cloud-trace-context']}"
              x-goog-iap-jwt-assertion: "{context.headers['x-goog-iap-jwt-assertion']}"
              x-typesense-api-key: '${TYPESENSE_API_KEY}'
      - name: PGR
        handler:
          graphql:
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/graphql/" .Values.pgr.chartName .Values.analyticsNamespace .Values.pgr.port | quote }}
      - name: CustomGroups
        handler:
          graphql:
            endpoint: {{ printf "http://%s.%s.svc.cluster.local:%s/graphql/" .Values.customGroups.chartName .Values.frontendNamespace .Values.customGroups.port | quote }}

    # disabling introspection is only available in version 1.94.4 and above
    {{- if (eq .Values.mesh.introspectionEnabled false) }}
    additionalEnvelopPlugins: './plugins/index.ts'
    {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mesh.fullname" . }}-typesense-openapi-cm
data:
  typesense-openapi.yml: |-
    openapi: 3.0.3
    info:
      title: Typesense API
      description: "An open source search engine for building delightful search experiences."
      version: 0.21.0
    externalDocs:
      description: Find out more about Typsesense
      url: https://typesense.org
    security:
      - api_key_header: []
    tags:
      - name: collections
        description: A collection is defined by a schema
        externalDocs:
          description: Find out more
          url: https://typesense.org/api/#create-collection
      - name: documents
        description: A document is an individual record to be indexed and belongs to a collection
        externalDocs:
          description: Find out more
          url: https://typesense.org/api/#index-document

    paths:
      /collections:
        get:
          tags:
            - collections
          summary: List all collections
          description:
            Returns a summary of all your collections. The collections are
            returned sorted by creation date, with the most recent collections appearing
            first.
          operationId: getCollections
          responses:
            200:
              description: List of all collections
              content:
                application/json:
                  schema:
                    type: array
                    x-go-type: "[]*CollectionResponse"
                    items:
                      $ref: "#/components/schemas/CollectionResponse"
      /collections/{collectionName}:
        get:
          tags:
            - collections
          summary: Retrieve a single collection
          description: Retrieve the details of a collection, given its name.
          operationId: getCollection
          parameters:
            - name: collectionName
              in: path
              description: The name of the collection to retrieve
              required: true
              schema:
                type: string
          responses:
            200:
              description: Collection fetched
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CollectionResponse"
            404:
              description: Collection not found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ApiResponse"
      /collections/{collectionName}/documents/search:
        get:
          tags:
            - documents
          summary: Search for documents in a collection
          description: Search for documents in a collection that match the search criteria.
          operationId: searchCollection
          parameters:
            - name: collectionName
              in: path
              description: The name of the collection to search for the document under
              required: true
              schema:
                type: string
            - name: searchParameters
              required: true
              in: query
              schema:
                $ref: "#/components/schemas/SearchParameters"
          responses:
            200:
              description: Search results
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/SearchResult"
            400:
              description: Bad request, see error message for details
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ApiResponse"
            404:
              description: The collection or field was not found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ApiResponse"
      /health:
        get:
          tags:
            - health
          summary: Checks if Typesense server is ready to accept requests.
          description: Checks if Typesense server is ready to accept requests.
          operationId: health
          responses:
            200:
              description: Search service is ready for requests.
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/HealthStatus"
      /multi_search:
        post:
          operationId: multiSearch
          tags:
            - documents
          summary: send multiple search requests in a single HTTP request
          description:
            This is especially useful to avoid round-trip network latencies incurred otherwise if each of these requests are sent in separate HTTP requests.
            You can also use this feature to do a federated search across multiple collections in a single HTTP request.
          parameters:
            - name: multiSearchParameters
              required: true
              in: query
              schema:
                $ref: "#/components/schemas/MultiSearchParameters"
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/MultiSearchSearchesParameter"
          responses:
            200:
              description: Search results
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/MultiSearchResult"

    components:
      schemas:
        CollectionSchema:
          required:
            - name
            - fields
          type: object
          properties:
            name:
              type: string
              description: Name of the collection
              example: companies
            fields:
              type: array
              description: A list of fields for querying, filtering and faceting
              example:
                - name: company_name
                  type: string
                  facet: false
                - name: num_employees
                  type: int32
                  facet: false
                - name: country
                  type: string
                  facet: true
              items:
                $ref: "#/components/schemas/Field"
            default_sorting_field:
              type: string
              description:
                The name of an int32 / float field that determines the order in which
                the search results are ranked when a sort_by clause is not provided during
                searching. This field must indicate some kind of popularity.
              example: num_employees
              default: ""
            token_separators:
              type: array
              description: >
                List of symbols or special characters to be used for
                splitting the text into individual words in addition to space and new-line characters.
              items:
                type: string # characters only
              default: []

            symbols_to_index:
              type: array
              description: >
                List of symbols or special characters to be indexed.
              items:
                type: string # characters only
              default: []
        CollectionResponse:
          allOf:
            - $ref: "#/components/schemas/CollectionSchema"
            - type: object
              required:
                - num_documents
                - created_at
              properties:
                num_documents:
                  type: integer
                  description: Number of documents in the collection
                  format: int64
                  readOnly: true
                created_at:
                  type: integer
                  description: Timestamp of when the collection was created
                  format: int64
                  readOnly: true
        Field:
          required:
            - name
            - type
          type: object
          properties:
            name:
              type: string
              example: company_name
            type:
              type: string
              example: string
            optional:
              type: boolean
              example: true
              default: false
            facet:
              type: boolean
              example: false
              default: false
            index:
              type: boolean
              example: true
              default: true
        SearchResult:
          type: object
          properties:
            facet_counts:
              type: object
              properties:
                counts:
                  type: array
                  items:
                    type: object
                    properties:
                      count:
                        type: integer
                      highlighted:
                        type: string
                      value:
                        type: string
                field_name:
                  type: string
                stats:
                  type: object
                  properties:
                    max:
                      type: integer
                    min:
                      type: integer
                    sum:
                      type: integer
                    total_values:
                      type: integer
                    avg:
                      type: number
                      format: float
            found:
              type: integer
              description: The number of documents found
            search_time_ms:
              type: integer
              description: The number of milliseconds the search took
            out_of:
              type: integer
              description: The total number of pages
            search_cutoff:
              type: boolean
              description: Whether the search was cut off
            page:
              type: integer
              description: The search result page number
            grouped_hits:
              type: array
              items:
                $ref: "#/components/schemas/SearchGroupedHit"
            hits:
              type: array
              description: The documents that matched the search query
              items:
                $ref: "#/components/schemas/SearchResultHit"
            request_params:
              type: object
              required:
                - collection_name
                - q
                - per_page
              properties:
                collection_name:
                  type: string
                q:
                  type: string
                per_page:
                  type: integer

        SearchGroupedHit:
          type: object
          required:
            - group_key
            - hits
          properties:
            group_key:
              type: array
              items:
                type: string
            hits:
              type: array
              description: The documents that matched the search query
              items:
                $ref: "#/components/schemas/SearchResultHit"
        SearchResultHit:
          type: object
          properties:
            highlights:
              type: array
              description: Contains highlighted portions of the search fields
              items:
                $ref: "#/components/schemas/SearchHighlight"
            document:
              type: object
              description: Can be any key-value pair
              additionalProperties:
                type: object
            text_match:
              type: integer
              format: int64
            geo_distance_meters:
              type: object
              description: Can be any key-value pair
              additionalProperties:
                type: integer
          example:
            highlights:
              company_name:
                field: company_name
                snippet: <mark>Stark</mark> Industries
            document:
              id: "124"
              company_name: Stark Industries
              num_employees: 5215
              country: USA
            text_match: 1234556
        SearchHighlight:
          type: object
          properties:
            field:
              type: string
              example: company_name
            snippet:
              type: string
              description: Present only for (non-array) string fields
              example: <mark>Stark</mark> Industries
            snippets:
              type: array
              description: Present only for (array) string[] fields
              example:
                - <mark>Stark</mark> Industries
                - <mark>Stark</mark> Corp
              items:
                type: string
            indices:
              type: array
              description: The indices property will be present only for string[]
                fields and will contain the corresponding indices of the snippets
                in the search field
              example: 1
              items:
                type: integer
            matched_tokens:
              type: array
              items:
                type: object
                x-go-type: "interface{}"
        HealthStatus:
          type: object
          required:
            - ok
          properties:
            ok:
              type: boolean
        SuccessStatus:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
        ApiResponse:
          type: object
          required:
            - message
          properties:
            message:
              type: string
        ApiKeySchema:
          type: object
          required:
            - actions
            - collections
          properties:
            description:
              type: string
            actions:
              type: array
              items:
                type: string
            collections:
              type: array
              items:
                type: string
            expires_at:
              type: integer
              format: int64
        ApiKey:
          allOf:
            - $ref: "#/components/schemas/ApiKeySchema"
            - type: object
              required:
                - id
                - value
                - value_prefix
              properties:
                id:
                  type: integer
                  format: int64
                  readOnly: true
                value:
                  type: string
                  readOnly: true
                value_prefix:
                  type: string
                  readOnly: true
        ApiKeysResponse:
          type: object
          required:
            - keys
          properties:
            keys:
              type: array
              x-go-type: "[]*ApiKey"
              items:
                $ref: "#/components/schemas/ApiKey"
        ErrorResponse:
          type: object
          properties:
            message:
              type: string
        MultiSearchResult:
          type: object
          required:
            - results
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/SearchResult"
        SearchParameters:
          type: object
          required:
            - q
            - query_by

          properties:
            q:
              description: The query text to search for in the collection.
                Use * as the search string to return all documents.
                This is typically useful when used in conjunction with filter_by.
              type: string

            query_by:
              description: A list of `string` fields that should be queried
                against. Multiple fields are separated with a comma.
              type: string

            query_by_weights:
              description:
                The relative weight to give each `query_by` field when ranking results.
                This can be used to boost fields in priority, when looking for matches.
                Multiple fields are separated with a comma.
              type: string

            max_hits:
              description: >
                Maximum number of hits returned. Increasing this value might
                increase search latency. Default: 500. Use `all` to return all hits found.
              oneOf:
                - type: integer
                  example: 500
                - type: string
                  example: all
                  enum:
                    - all

            prefix:
              description:
                Boolean field to indicate that the last word in the query should
                be treated as a prefix, and not as a whole word. This is used for building
                autocomplete and instant search interfaces. Defaults to true.
              type: string

            filter_by:
              description:
                Filter conditions for refining youropen api validator search results. Separate
                multiple conditions with &&.
              type: string
              example: "num_employees:>100 && country: [USA, UK]"

            sort_by:
              description:
                A list of numerical fields and their corresponding sort orders
                that will be used for ordering your results.
                Up to 3 sort fields can be specified.
                The text similarity score is exposed as a special `_text_match` field that
                you can use in the list of sorting fields.
                If no `sort_by` parameter is specified, results are sorted by
                `_text_match:desc,default_sorting_field:desc`
              type: string
              example: num_employees:desc

            facet_by:
              description:
                A list of fields that will be used for faceting your results
                on. Separate multiple fields with a comma.
              type: string

            max_facet_values:
              description: Maximum number of facet values to be returned.
              type: integer

            facet_query:
              description:
                Facet values that are returned can now be filtered via this parameter.
                The matching facet text is also highlighted. For example, when faceting
                by `category`, you can set `facet_query=category:shoe` to return only
                facet values that contain the prefix "shoe".
              type: string

            num_typos:
              description: >
                The number of typographical errors (1 or 2) that would be tolerated.
                Default: 2
              type: integer

            page:
              description: Results from this specific page number would be fetched.
              type: integer

            per_page:
              description: "Number of results to fetch per page. Default: 10"
              type: integer

            group_by:
              description:
                You can aggregate search results into groups or buckets by specify
                one or more `group_by` fields. Separate multiple fields with a comma.
                To group on a particular field, it must be a faceted field.
              type: string

            group_limit:
              description: >
                Maximum number of hits to be returned for every group. If the `group_limit` is
                set as `K` then only the top K hits in each group are returned in the response.
                Default: 3
              type: integer

            include_fields:
              description: List of fields from the document to include in the search result
              type: string

            exclude_fields:
              description: List of fields from the document to exclude in the search result
              type: string

            highlight_full_fields:
              description: List of fields which should be highlighted fully without snippeting
              type: string

            highlight_affix_num_tokens:
              description: >
                The number of tokens that should surround the highlighted text on each side.
                Default: 4
              type: integer

            highlight_start_tag:
              description: >
                The start tag used for the highlighted snippets.
                Default: `<mark>`
              type: string
            highlight_end_tag:
              description: >
                The end tag used for the highlighted snippets.
                Default: `</mark>`
              type: string

            snippet_threshold:
              description: >
                Field values under this length will be fully highlighted, instead of showing
                a snippet of relevant portion. Default: 30
              type: integer

            drop_tokens_threshold:
              description: >
                If the number of results found for a specific query is less than
                this number, Typesense will attempt to drop the tokens in the query until
                enough results are found. Tokens that have the least individual hits
                are dropped first. Set to 0 to disable. Default: 10
              type: integer
            typo_tokens_threshold:
              description: >
                If the number of results found for a specific query is less than this number,
                Typesense will attempt to look for tokens with more typos until
                enough results are found. Default: 100
              type: integer

            pinned_hits:
              description: >
                A list of records to unconditionally include in the search results
                at specific positions. An example use case would be to feature or promote
                certain items on the top of search results.
                A list of `record_id:hit_position`. Eg: to include a record with ID 123
                at Position 1 and another record with ID 456 at Position 5,
                you'd specify `123:1,456:5`.

                You could also use the Overrides feature to override search results based
                on rules. Overrides are applied first, followed by `pinned_hits` and
                finally `hidden_hits`.
              type: string

            hidden_hits:
              description: >
                A list of records to unconditionally hide from search results.
                A list of `record_id`s to hide. Eg: to hide records with IDs 123 and 456,
                you'd specify `123,456`.

                You could also use the Overrides feature to override search results based
                on rules. Overrides are applied first, followed by `pinned_hits` and
                finally `hidden_hits`.
              type: string

            highlight_fields:
              description: >
                A list of custom fields that must be highlighted even if you don't query
                for them
              type: string

            pre_segmented_query:
              description: >
                You can index content from any logographic language into Typesense if you
                are able to segment / split the text into space-separated words yourself
                before indexing and querying.

                Set this parameter to tre to do the same
              type: boolean

            enable_overrides:
              description: >
                If you have some overrides defined but want to disable all of them during
                query time, you can do that by setting this parameter to false
              type: boolean

            prioritize_exact_match:
              description: >
                Set this parameter to true to ensure that an exact match is ranked above
                the others
              type: boolean
            exhaustive_search:
              description: >
                Setting this to true will make Typesense consider all prefixes and typo
                corrections of the words in the query without stopping early when enough results are found
                (drop_tokens_threshold and typo_tokens_threshold configurations are ignored).
              type: boolean
            search_cutoff_ms:
              description: >
                Typesense will attempt to return results early if the cutoff time has elapsed.
                This is not a strict guarantee and facet computation is not bound by this parameter.
              type: integer
            use_cache:
              description: >
                Enable server side caching of search query results. By default, caching is disabled.
              type: boolean
            cache_ttl:
              description: >
                The duration (in seconds) that determines how long the search query is cached.
                This value can be set on a per-query basis. Default: 60.
              type: integer
            min_len_1typo:
              description: >
                Minimum word length for 1-typo correction to be applied.
                The value of num_typos is still treated as the maximum allowed typos.
              type: integer
            min_len_2typo:
              description: >
                Minimum word length for 2-typo correction to be applied.
                The value of num_typos is still treated as the maximum allowed typos.
              type: integer

        MultiSearchParameters:
          description: >
            Parameters for the multi search API.
          type: object
          properties:
            q:
              description: The query text to search for in the collection.
                Use * as the search string to return all documents.
                This is typically useful when used in conjunction with filter_by.
              type: string

            query_by:
              description: A list of `string` fields that should be queried
                against. Multiple fields are separated with a comma.
              type: string

            query_by_weights:
              description:
                The relative weight to give each `query_by` field when ranking results.
                This can be used to boost fields in priority, when looking for matches.
                Multiple fields are separated with a comma.
              type: string

            max_hits:
              description: >
                Maximum number of hits returned. Increasing this value might
                increase search latency. Default: 500. Use `all` to return all hits found.
              oneOf:
                - type: integer
                  example: 500
                - type: string
                  example: all
                  enum:
                    - all

            prefix:
              description:
                Boolean field to indicate that the last word in the query should
                be treated as a prefix, and not as a whole word. This is used for building
                autocomplete and instant search interfaces. Defaults to true.
              type: string

            filter_by:
              description:
                Filter conditions for refining youropen api validator search results. Separate
                multiple conditions with &&.
              type: string
              example: "num_employees:>100 && country: [USA, UK]"

            sort_by:
              description:
                A list of numerical fields and their corresponding sort orders
                that will be used for ordering your results.
                Up to 3 sort fields can be specified.
                The text similarity score is exposed as a special `_text_match` field that
                you can use in the list of sorting fields.
                If no `sort_by` parameter is specified, results are sorted by
                `_text_match:desc,default_sorting_field:desc`
              type: string

            facet_by:
              description:
                A list of fields that will be used for faceting your results
                on. Separate multiple fields with a comma.
              type: string

            max_facet_values:
              description: Maximum number of facet values to be returned.
              type: integer

            facet_query:
              description:
                Facet values that are returned can now be filtered via this parameter.
                The matching facet text is also highlighted. For example, when faceting
                by `category`, you can set `facet_query=category:shoe` to return only
                facet values that contain the prefix "shoe".
              type: string

            num_typos:
              description: >
                The number of typographical errors (1 or 2) that would be tolerated.
                Default: 2
              type: integer

            page:
              description: Results from this specific page number would be fetched.
              type: integer

            per_page:
              description: "Number of results to fetch per page. Default: 10"
              type: integer

            group_by:
              description:
                You can aggregate search results into groups or buckets by specify
                one or more `group_by` fields. Separate multiple fields with a comma.
                To group on a particular field, it must be a faceted field.
              type: string

            group_limit:
              description: >
                Maximum number of hits to be returned for every group. If the `group_limit` is
                set as `K` then only the top K hits in each group are returned in the response.
                Default: 3
              type: integer

            include_fields:
              description: List of fields from the document to include in the search result
              type: string

            exclude_fields:
              description: List of fields from the document to exclude in the search result
              type: string

            highlight_full_fields:
              description: List of fields which should be highlighted fully without snippeting
              type: string

            highlight_affix_num_tokens:
              description: >
                The number of tokens that should surround the highlighted text on each side.
                Default: 4
              type: integer

            highlight_start_tag:
              description: >
                The start tag used for the highlighted snippets.
                Default: `<mark>`
              type: string
            highlight_end_tag:
              description: >
                The end tag used for the highlighted snippets.
                Default: `</mark>`
              type: string

            snippet_threshold:
              description: >
                Field values under this length will be fully highlighted, instead of showing
                a snippet of relevant portion. Default: 30
              type: integer

            drop_tokens_threshold:
              description: >
                If the number of results found for a specific query is less than
                this number, Typesense will attempt to drop the tokens in the query until
                enough results are found. Tokens that have the least individual hits
                are dropped first. Set to 0 to disable. Default: 10
              type: integer
            typo_tokens_threshold:
              description: >
                If the number of results found for a specific query is less than this number,
                Typesense will attempt to look for tokens with more typos until
                enough results are found. Default: 100
              type: integer

            pinned_hits:
              description: >
                A list of records to unconditionally include in the search results
                at specific positions. An example use case would be to feature or promote
                certain items on the top of search results.
                A list of `record_id:hit_position`. Eg: to include a record with ID 123
                at Position 1 and another record with ID 456 at Position 5,
                you'd specify `123:1,456:5`.

                You could also use the Overrides feature to override search results based
                on rules. Overrides are applied first, followed by `pinned_hits` and
                finally `hidden_hits`.
              type: string

            hidden_hits:
              description: >
                A list of records to unconditionally hide from search results.
                A list of `record_id`s to hide. Eg: to hide records with IDs 123 and 456,
                you'd specify `123,456`.

                You could also use the Overrides feature to override search results based
                on rules. Overrides are applied first, followed by `pinned_hits` and
                finally `hidden_hits`.
              type: string

            highlight_fields:
              description: >
                A list of custom fields that must be highlighted even if you don't query
                for them
              type: string

            pre_segmented_query:
              description: >
                You can index content from any logographic language into Typesense if you
                are able to segment / split the text into space-separated words yourself
                before indexing and querying.

                Set this parameter to tre to do the same
              type: boolean

            enable_overrides:
              description: >
                If you have some overrides defined but want to disable all of them during
                query time, you can do that by setting this parameter to false
              type: boolean

            prioritize_exact_match:
              description: >
                Set this parameter to true to ensure that an exact match is ranked above
                the others
              type: boolean
            exhaustive_search:
              description: >
                Setting this to true will make Typesense consider all prefixes and typo
                corrections of the words in the query without stopping early when enough results are found
                (drop_tokens_threshold and typo_tokens_threshold configurations are ignored).
              type: boolean
            search_cutoff_ms:
              description: >
                Typesense will attempt to return results early if the cutoff time has elapsed.
                This is not a strict guarantee and facet computation is not bound by this parameter.
              type: integer
            use_cache:
              description: >
                Enable server side caching of search query results. By default, caching is disabled.
              type: boolean
            cache_ttl:
              description: >
                The duration (in seconds) that determines how long the search query is cached.
                This value can be set on a per-query basis. Default: 60.
              type: integer
            min_len_1typo:
              description: >
                Minimum word length for 1-typo correction to be applied.
                The value of num_typos is still treated as the maximum allowed typos.
              type: integer
            min_len_2typo:
              description: >
                Minimum word length for 2-typo correction to be applied.
                The value of num_typos is still treated as the maximum allowed typos.
              type: integer
        MultiSearchSearchesParameter:
          type: object
          required:
            - searches
          properties:
            searches:
              type: array
              items:
                $ref: "#/components/schemas/MultiSearchCollectionParameters"
        MultiSearchCollectionParameters:
          allOf:
            - $ref: "#/components/schemas/MultiSearchParameters"
            - type: object
              required:
                - collection
              properties:
                collection:
                  type: string
                  description: >
                    The collection to search in.
      securitySchemes:
        api_key_header:
          type: apiKey
          name: X-TYPESENSE-API-KEY
          in: header
