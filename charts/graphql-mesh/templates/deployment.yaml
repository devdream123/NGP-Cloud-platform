apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mesh.fullname" . }}
  labels:
    {{- include "mesh.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mesh.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "graphql-mesh.configChecksum" . | nindent 8 }}
      labels:
        {{- include "mesh.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mesh.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "mesh.fullname" . }}-env-cm
            - secretRef:
                name: {{ include "mesh.fullname" . }}-secrets
          {{- if .Values.otel.enabled }}
          env:
            - name: SPLUNK_OTEL_AGENT
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://$(SPLUNK_OTEL_AGENT):4317"
          {{- end }}
          volumeMounts:
            - mountPath: /mesh/.meshrc.yaml
              name: {{ include "mesh.fullname" . }}-meshrc-cm
              subPath: .meshrc.yaml
            - mountPath: /mesh/typesense-openapi.yml
              name: {{ include "mesh.fullname" . }}-typesense-openapi-cm
              subPath: typesense-openapi.yml
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livelinessProbe.path }}
              port: {{ .Values.livelinessProbe.port }}
            initialDelaySeconds: {{ .Values.livelinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livelinessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}            
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: {{ include "mesh.fullname" . }}-meshrc-cm
        configMap:
          name: {{ include "mesh.fullname" . }}-meshrc-cm
      - name: {{ include "mesh.fullname" . }}-typesense-openapi-cm
        configMap:
          name: {{ include "mesh.fullname" . }}-typesense-openapi-cm
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
